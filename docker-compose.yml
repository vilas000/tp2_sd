version: '3.8'

services:
  # --- Serviços do Cluster Sync ---
  sync_peer_1:
    build: ./cluster_sync_app
    hostname: sync_peer_1
    environment:
      PEER_ID: Peer_1
      PEER_PORT: 12345
      PYTHONUNBUFFERED: 1
    ports:
      - "12345:12345"
    networks:
      - my_distributed_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.settimeout(2); s.connect(('localhost', 12345)); s.close()"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

  sync_peer_2:
    build: ./cluster_sync_app
    hostname: sync_peer_2
    environment:
      PEER_ID: Peer_2
      PEER_PORT: 12346
      PYTHONUNBUFFERED: 1
    ports:
      - "12346:12346"
    networks:
      - my_distributed_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.settimeout(2); s.connect(('localhost', 12346)); s.close()"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s
    depends_on:
      sync_peer_1:
        condition: service_healthy

  sync_peer_3:
    build: ./cluster_sync_app
    hostname: sync_peer_3
    environment:
      PEER_ID: Peer_3
      PEER_PORT: 12347
      PYTHONUNBUFFERED: 1
    ports:
      - "12347:12347"
    networks:
      - my_distributed_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.settimeout(2); s.connect(('localhost', 12347)); s.close()"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy

  sync_peer_4:
    build: ./cluster_sync_app
    hostname: sync_peer_4
    environment:
      PEER_ID: Peer_4
      PEER_PORT: 12348
      PYTHONUNBUFFERED: 1
    ports:
      - "12348:12348"
    networks:
      - my_distributed_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.settimeout(2); s.connect(('localhost', 12348)); s.close()"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy
      sync_peer_3:
        condition: service_healthy

  sync_peer_5:
    build: ./cluster_sync_app
    hostname: sync_peer_5
    environment:
      PEER_ID: Peer_5
      PEER_PORT: 12349
      PYTHONUNBUFFERED: 1
    ports:
      - "12349:12349"
    networks:
      - my_distributed_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.settimeout(2); s.connect(('localhost', 12349)); s.close()"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy
      sync_peer_3:
        condition: service_healthy
      sync_peer_4:
        condition: service_healthy

  # --- Serviços do Cliente ---

  client_1:
    build: ./client_app
    hostname: client_1
    environment:
      CLIENT_ID: Client_A
      # AINDA PRECISAMOS DO HOST/PORT INICIAL PARA A PRIMEIRA CONEXÃO
      CLUSTER_SYNC_HOST: sync_peer_1
      CLUSTER_SYNC_PORT: 12345
      # NOVO: Lista completa de todos os peers para failover
      CLUSTER_PEERS_LIST: "sync_peer_1:12345,sync_peer_2:12346,sync_peer_3:12347,sync_peer_4:12348,sync_peer_5:12349"
      PYTHONUNBUFFERED: 1
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy
      sync_peer_3:
        condition: service_healthy
      sync_peer_4:
        condition: service_healthy
      sync_peer_5:
        condition: service_healthy
    networks:
      - my_distributed_net
    restart: on-failure


  client_2:
    build: ./client_app
    hostname: client_2
    environment:
      CLIENT_ID: Client_B
      # AINDA PRECISAMOS DO HOST/PORT INICIAL PARA A PRIMEIRA CONEXÃO
      CLUSTER_SYNC_HOST: sync_peer_2
      CLUSTER_SYNC_PORT: 12346
      # NOVO: Lista completa de todos os peers para failover
      CLUSTER_PEERS_LIST: "sync_peer_1:12345,sync_peer_2:12346,sync_peer_3:12347,sync_peer_4:12348,sync_peer_5:12349"
      PYTHONUNBUFFERED: 1
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy
      sync_peer_3:
        condition: service_healthy
      sync_peer_4:
        condition: service_healthy
      sync_peer_5:
        condition: service_healthy
    networks:
      - my_distributed_net
    restart: on-failure


  client_3:
    build: ./client_app
    hostname: client_3
    environment:
      CLIENT_ID: Client_c
      # AINDA PRECISAMOS DO HOST/PORT INICIAL PARA A PRIMEIRA CONEXÃO
      CLUSTER_SYNC_HOST: sync_peer_3
      CLUSTER_SYNC_PORT: 12347
      # NOVO: Lista completa de todos os peers para failover
      CLUSTER_PEERS_LIST: "sync_peer_1:12345,sync_peer_2:12346,sync_peer_3:12347,sync_peer_4:12348,sync_peer_5:12349"
      PYTHONUNBUFFERED: 1
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy
      sync_peer_3:
        condition: service_healthy
      sync_peer_4:
        condition: service_healthy
      sync_peer_5:
        condition: service_healthy
    networks:
      - my_distributed_net
    restart: on-failure


  client_4:
    build: ./client_app
    hostname: client_4
    environment:
      CLIENT_ID: Client_d
      # AINDA PRECISAMOS DO HOST/PORT INICIAL PARA A PRIMEIRA CONEXÃO
      CLUSTER_SYNC_HOST: sync_peer_4
      CLUSTER_SYNC_PORT: 12348
      # NOVO: Lista completa de todos os peers para failover
      CLUSTER_PEERS_LIST: "sync_peer_1:12345,sync_peer_2:12346,sync_peer_3:12347,sync_peer_4:12348,sync_peer_5:12349"
      PYTHONUNBUFFERED: 1
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy
      sync_peer_3:
        condition: service_healthy
      sync_peer_4:
        condition: service_healthy
      sync_peer_5:
        condition: service_healthy
    networks:
      - my_distributed_net
    restart: on-failure


  client_5:
    build: ./client_app
    hostname: client_5
    environment:
      CLIENT_ID: Client_e
      # AINDA PRECISAMOS DO HOST/PORT INICIAL PARA A PRIMEIRA CONEXÃO
      CLUSTER_SYNC_HOST: sync_peer_5
      CLUSTER_SYNC_PORT: 12349
      # NOVO: Lista completa de todos os peers para failover
      CLUSTER_PEERS_LIST: "sync_peer_1:12345,sync_peer_2:12346,sync_peer_3:12347,sync_peer_4:12348,sync_peer_5:12349"
      PYTHONUNBUFFERED: 1
    depends_on:
      sync_peer_1:
        condition: service_healthy
      sync_peer_2:
        condition: service_healthy
      sync_peer_3:
        condition: service_healthy
      sync_peer_4:
        condition: service_healthy
      sync_peer_5:
        condition: service_healthy
    networks:
      - my_distributed_net
    restart: on-failure

networks:
  my_distributed_net:
    driver: bridge